@using Web_Gio_Cha.Models;
@using Web_Gio_Cha.Resources;
@model UserModel
@{
    ViewBag.Title = "Thay đổi thông tin";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<td class="row" align="center" valign="top">
    <div class="col-md-12">
        <section id="loginForm">
            @using (Html.BeginForm("Edit", "Login", FormMethod.Post, new { id = "formUserRegis", enctype = "multipart/form-data", @class = "form-horizontal" }))
            {
                <h2>@ViewBag.Title</h2>

                @*@Html.AntiForgeryToken()*@
                <hr />
                @Html.HiddenFor(m => m.ID)

                @Html.ValidationSummary(false)
                <span id="title"></span>
                <div>
                    <div class="col-md-2 leftRigist">
                    </div>

                    <div class="col-md-8">
                        <div class="form-group">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12">
                                @Html.Label("Email:", new { @class = "lblTitle" })
                            </div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left">
                                @if (String.IsNullOrEmpty(Model.Email))
                                {
                                    @Html.TextBoxFor(m => m.Email, new { @class = "lblTitle", style = "ime-mode: auto; ", maxlength = 100 })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.Email, new { @class = "ime-mode border-none lblTitle", @readonly = "readonly" })
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12">
                                @Html.Label("Họ Tên:", new { @class = "lblTitle" })
                            </div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12">
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("Quận, huyện:", new { @class = "lblTitle" })
                            </div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left">
                                @Html.DropDownListFor(m => m.Receive_District, Model.DISTRICT_LIST, new { @class = "Receive_District txt-box", maxlength = 100 })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12">
                                @Html.Label("Địa chỉ:", new { @class = "lblTitle" })
                            </div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12">
                                @Html.TextBoxFor(m => m.Receive_Address, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("Số điện thoại:", new { @class = "lblTitle" })
                            </div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12">
                                @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group center margin-left-6" style="margin-bottom: 15px">
                            <div class="col-md-offset-2 col-md-10">
                                <button id="btnSubmit" type="button" name="btnSubmit" style="margin-bottom: 10px" class="btn btn-green">Cập nhật</button>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-2 rightRigist">
                    </div>
                </div>
            }
        </section>
    </div>
</td>

<script>
    $(function () {
        WebDuhoc.utility.validFullHalfSize($("#Email"));
        WebDuhoc.utility.imeControl($("#Email"), 'disable');
        WebDuhoc.utility.validFullHalfSize($("#Password"));
        WebDuhoc.utility.imeControl($("#Password"), 'disable');

        WebDuhoc.utility.validFullHalfSize($("#Phone"));
        WebDuhoc.utility.imeControl($("#Phone"), 'disable');
        WebDuhoc.utility.checkInputNumber($("#Phone"));

    });

    function validateData() {
        var invalidMess = [];

        var userEmail = $('#Email').val();
        var userName = $('#UserName').val();
        var password = $('#Password').val();
        var phone = $('#Phone').val();

        var userID = $('#ID').val();
        var status = $('#Status').val();
        var errContent = [];
        var errDisplay = [];
        var invalidMess = [];

        // validate user Email
        if (userEmail == null || userEmail.trim() == "") { // required content
            errDisplay = '@UserLabel.lblEmail' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        else if (userEmail.trim().length > 100) {
            invalidMess.push("@string.Format(Message.CheckMaxLength, @UserLabel.lblEmail, Constant.MAX_EMAIL_LENGTH)");
        }
        else if (!WebDuhoc.utility.validEmail(userEmail)) {
            invalidMess.push("@string.Format(@Message.IncorrectFormat, @UserLabel.lblEmail)");
        }

        // validate user name
        if (userName == null || userName.trim() == "") { // required content
            errDisplay = '@UserLabel.lblUserName' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        else if (userName.trim().length > Constant.MAX_USER_NAME_LENGTH) {
            invalidMess.push("@string.Format(Message.CheckMaxLength, UserLabel.lblUserName, Constant.MAX_USER_NAME_LENGTH)");
        }
        // Validate password
        if (phone == null || phone.trim() == "" || phone == 0) {
            errDisplay = '@UserLabel.lblPhone' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        else if (phone.trim().length > 13) {
            invalidMess.push("@string.Format(Message.CheckMaxLength, @UserLabel.lblPhone, Constant.MAX_PHONE_LENGTH)");
        }
            // check numberic
        else if (!WebDuhoc.utility.validPhone(phone)) {
            invalidMess.push("@string.Format(@Message.IncorrectFormat, @UserLabel.lblPhone)");
        }

        return invalidMess;
    }

    $(document).off('#btnSubmit');
    $(document).on('click', '#btnSubmit', function () {
        //if (!WebDuhoc.utility.getDataByAjax(checkTimeoutUrl, null)) return;

        $('.validation-summary-errors').remove();
        var invalidMess = validateData();
        if (invalidMess.length > 0) {
            WebDuhoc.utility.showClientError(invalidMess);
            return false;
        }

        var existUser = false;
        var userOld = $('#ID').val();

        // Chi truong hop dang ki moi thi moi check trung code
        if (userOld == 0) {
            var userEmail = $('#Email').val();

            var paramCheckExist = {
                userEmail: userEmail
            };

            var data = WebDuhoc.utility.getDataByAjax('@Url.Action("CheckExistUserEmail", "Login")', paramCheckExist);
            if (typeof (data) != 'undefined' || data != null) {
                existUser = data.exist;
            } else {
                WebDuhoc.utility.showMessageModal('@string.Format(Message.msgErrorWhenCheckExist)', true);
            }
        }

        var confirmMess = existUser ? '@string.Format(Message.msgConfirmExistAccount)' : '@string.Format(Message.ConfirmSubmitData, (Model.ID > 0 ? Message.Update : Message.Register))';
        if (existUser) {
            WebDuhoc.utility.showMessageModal(confirmMess, true);
        } else {
            WebDuhoc.utility.showConfirmModal(confirmMess, function (action) {
                if (action) {

                    var formData = new FormData($('#formUserRegis')[0]);
                    //add the content

                    $.ajax(
                        {
                            url: '@Url.Action("Edit", "User")',
                            data: formData,
                            mimeType: "multipart/form-data",
                            type: 'POST',
                            contentType: false,
                            processData: false,
                            success: function (res) {
                                //window.parent.$('.ui-dialog-content:visible').dialog('close');
                                var result = jQuery.parseJSON(res);
                                var message = "";
                                if (result.ErrorMessages) {
                                    for (var i = 0; i < result.ErrorMessages.length; i++) {
                                        message += result.ErrorMessages[i] + "\n";
                                    }
                                    WebDuhoc.utility.showMessageModal(message, true);
                                } else {
                                    message = result.isNew == true ? "@Message.RegisterAccountSuccess" : "@Message.UpdateSuccess";
                                    WebDuhoc.utility.showMessageModal(message, false, function () {
                                        if (result.isNew == true) {
                                            window.location.href = "/dang-nhap";
                                        } else {
                                            window.location.href = "/trang-chu";
                                        }
                                    });
                                }
                            },
                            error: function (xhr) {
                                //window.parent.$('.ui-dialog-content:visible').dialog('close');
                                window.location.href = '/Common/Error/';
                            }
                        });
                }
            })
        }

    });

</script>

<style>
    .lblTitle {
        width: 100%;
        text-align:left;
    }
</style>