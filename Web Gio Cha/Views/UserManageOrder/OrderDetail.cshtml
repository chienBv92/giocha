@using Web_Gio_Cha.Models;
@using Web_Gio_Cha.Models.Define;
@using Web_Gio_Cha.Resources;

@model ViewOrderModel
@{
    ViewBag.Title = "Chi tiết đơn hàng";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var listSanPham = ViewBag.listDetail as IList<ItemGioHang>;
}
<div id="ViewOrderDetail" class="row" border="0" cellspacing="0" cellpadding="0">
    <div class="row form-group nomargin" style="padding-bottom:15px;    ">
        <div class="col-md-3 col-sm-3 col-xs-3"></div>
        <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12"><span class="Titlesanpham black" style="margin-top:10px">CHI TIẾT ĐƠN HÀNG: @Model.Code</span></div>
    </div>
    @Html.HiddenFor(m => m.ID, new {@class = "hdnOrderId"})
    @if (listSanPham == null || listSanPham.Count() == 0)
    {
        <p style="font-size:2em;padding:10px;margin:10px"> Giỏ hàng trống! </p>
        <a href="@Url.Action("Index","Home")" style="font-size:2em;padding:10px;margin:10px">Vui lòng quay trở lại trang chủ để mua hàng !! </a>
    }
    else
    {
        using (Html.BeginForm("CartSubmit", "GioHang", FormMethod.Post, new { id = "formOrder", enctype = "multipart/form-data", @class = "form-horizontal" }))
        {
            <div class="col-md-12 col-sm-8 col-xs-8 col-xs-12 nomargin">
              
                @for (int i = 0; i < listSanPham.Count(); i++)
                {
                    var link = "/xem-chi-tiet/" + listSanPham[i].MetaTitle + "/" + listSanPham[i].IdSanPham;
                    var imglink = listSanPham[i].HinhAnh != null ? listSanPham[i].HinhAnh : "/Images/demosanpham1.jpg";
                    <div class="col-md-12 col-sm-8 col-xs-8 col-xs-12 product-cart" style="display:inline-block; margin:5px">
                        <div class="col-md-2 col-sm-4 col-xs-6 col-xs-6">
                            <img class="ImgProduct-view" src="@imglink" title="@listSanPham[i].TenSanPham" alt="giò chả Vân Bảo" style="height:70px" />
                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-6 col-xs-6">
                            <a class="col-md-12 left title-product" href="@link" title="@listSanPham[i].TenSanPham">@listSanPham[i].TenSanPham</a>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6 col-xs-6">
                            <p class="left money donGia">@listSanPham[i].DonGia</p>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6 col-xs-6 quantity">
                            <p class="qty col-md-4"><span>x</span>@listSanPham[i].SoLuong</p>
                        </div>
                        <div class="col-md-2 col-sm-4 col-xs-6 col-xs-6">
                            <p class="left money tienHang">@listSanPham[i].TienHang</p>
                        </div>
                    </div>
                }
                @Html.HiddenFor(m => m.TongTienHang, new { @class = "" })
                @Html.HiddenFor(m => m.PriceDiscountTotal, new { @class = "" })
                @Html.HiddenFor(m => m.PriceShip, new { @class = "" })
                @Html.HiddenFor(m => m.PriceTotal, new { @class = "" })
                @Html.HiddenFor(m => m.UserID, new { @class = "UserID" })
                @Html.HiddenFor(m => m.ID, new { @class = "orderID" })

                <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12" style="margin-top:10px">
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                        <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; text-align:left">Trạng thái đơn hàng:</div>
                        <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12 bold" style="width:50%;text-align:left;color:red">@Model.ORDER_STATUS_TEXT</div>
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                        <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; font-weight:bold; text-align:left">Tạm tính:</div>
                        <div class="money TongTien col-md-6 col-sm-6 col-xs-6 col-xs-12 bold" style="width:50%;text-align:right">@Model.TongTienHang</div>
                    </div>
                </div>
                <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12" style="margin-top:10px">
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                        @if (Model.Status == OrderStatus.Cancel)
                        {
                            <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; text-align:left">Lý do hủy đơn:</div>
                            <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%;text-align:left">@Model.ReasonCancel</div>
                        }
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                        <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; font-weight:bold; text-align:left">Chiết khấu:</div>
                        <div class="money PriceDiscountTotal col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; text-align:right">@Model.PriceDiscountTotal</div>
                    </div>
                </div>
                <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12" style="margin-top:10px">
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                        <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; font-weight:bold; text-align:left">Phí vận chuyển:</div>
                        <div class="money PriceShip col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; text-align:right">@Model.PriceShip</div>
                    </div>
                </div>
                <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12" style="margin-top:10px">
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12">
                        <div class="col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; font-weight:bold; text-align:left">Tổng tiền:</div>
                        <div class="money PriceTotal col-md-6 col-sm-6 col-xs-6 col-xs-12" style="width:50%; color:red; text-align:right">@Model.PriceTotal</div>
                    </div>
                </div>
                <div id="title" class="col-md-12 col-sm-6 col-xs-6 col-xs-12 left bold" style="background-color: #F7950C; margin-top:10px">
                    <span style="margin-top:10px" class="lblCustomer">THÔNG TIN KHÁCH HÀNG</span>
                </div>
                <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12">
                    <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left padding-0" style="margin-top:20px">
                        <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12 margintop-5" style="display:inline-block; line-height:28px">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12 left" style="line-height:28px">Họ Tên:</div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left">
                                @if (Model.Status == OrderStatus.Create)
                                {
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "username txt-box", maxlength = 100 })
                                }
                                else
                                {
                                    @Html.Label(Model.UserName, new { @class = "address txt-nomal", maxlength = 100 })
                                }
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12 margintop-5" style="display:inline-block; line-height:28px">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12 left" style="line-height:28px">Quận:</div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left">
                                @if (Model.Status == OrderStatus.Create)
                                {
                                    @Html.DropDownListFor(m => m.Receive_District, Model.DISTRICT_LIST, new { @class = "Receive_District txt-box", maxlength = 100 })
                                }
                                else
                                {
                                    @Html.Label(Model.DistrictName, new { @class = "address txt-nomal", maxlength = 100 })
                                }
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12 margintop-5" style="display:inline-block; line-height:28px">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12 left" style="line-height:28px">Địa chỉ:</div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left">
                                @if (Model.Status == OrderStatus.Create)
                                {
                                    @Html.TextBoxFor(m => m.Receive_Address, new { @class = "address txt-box", maxlength = 100 })
                                }
                                else
                                {
                                    @Html.Label(Model.Receive_Address, new { @class = "address txt-nomal", maxlength = 100 })
                                }
                            </div>
                        </div>
                        <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12 margintop-5" style="display:inline-block; line-height:28px">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12 left" style="line-height:28px">Số điện thoại:</div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left">
                                @if (Model.Status == OrderStatus.Create)
                                {
                                    @Html.TextBoxFor(m => m.Receive_Phone, new { @class = "phone txt-box", maxlength = 13 })
                                }
                                else
                                {
                                    @Html.Label(Model.Receive_Phone, new { @class = "phone txt-nomal", maxlength = 100 })
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12 padding-0" style="margin-top:20px">
                        <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12 margintop-5 padding-0" style="display:inline-block; line-height:28px">
                            <div class="col-md-4 col-sm-6 col-xs-6 col-xs-12 left padding-0" style="line-height:28px">Ghi chú:</div>
                            <div class="col-md-8 col-sm-6 col-xs-6 col-xs-12 left padding-0">
                                @if (Model.Status == OrderStatus.Create)
                                {
                                    @Html.TextAreaFor(m => m.Note, new { @class = "note", maxlength = 100 })
                                }
                                else
                                {
                                    <label class="note txt-nomal">@Model.Note</label>
                                }

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12 col-sm-6 col-xs-6 col-xs-12 left bold" style="background-color: #F7950C; margin-top:10px">
                    <span style="margin-top:10px" class="lblCustomer"> PHƯƠNG THỨC THANH TOÁN</span>
                </div>
                <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12">
                    <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12 left">
                        <span>@Model.PAYMENT_METHOD_TEXT</span>
                        (<span>@Model.PAID_TEXT</span>)
                    </div>
                  
                </div>

                <div class="col-md-12 col-sm-4 col-xs-4 col-xs-12" style="margin-bottom:10px">
                    <div class="col-md-3 col-sm-6 col-xs-6 col-xs-12 left" style="margin-top:20px; padding:0px">
                        <button type="button" class="" onclick="window.location.href = '/danh-sach-don'" style="height:27px">Quay lại danh sách đơn</button>
                    </div>
                    <div class="col-md-9 col-sm-6 col-xs-6 col-xs-12" style="margin-top:20px">
                        @if (Model.Status == OrderStatus.Create)
                        {
                            <button type="button" class="btn btn-danger" id="btnCancel" style="float:right">Hủy</button>
                            <button type="button" class="btn btn-green" id="btnEditInfo" style="float:right"><i class="btn-icon btn-edit"> </i>Chỉnh sửa thông tin</button>
                        }
                      
                    </div>
                </div>
            </div>
        }
    }
</div>
<script>
    WebDuhoc.utility.validFullHalfSize($("#Receive_Phone"));
    WebDuhoc.utility.imeControl($("#Receive_Phone"), 'disable');
    WebDuhoc.utility.checkInputNumber($("#Receive_Phone"));

    var DistrictListUrl = '@Url.Action("DistrictList", "ManageDistrict")';
    var checkTimeoutUrl = '@Url.Action("CheckTimeOut", "Common")';

    $(document).ready(function () {
        // Format money
        $(".money").each(function () {
            var data = WebDuhoc.utility.convertIntToMoney($(this).text());
            $(this).text(data);
        });

        $(document).on("input", ".qty", function () {
            this.value = this.value.replace(/\D/g, '');
        });
    });

    $('input[name="METHOD_TYPE"]').on('change', function () {
        if ($('#method_type_1').is(":checked")) {

        }
    });

    function validateData() {
        var invalidMess = [];
        var UserName = $('#UserName').val();
        var Receive_District = $('#Receive_District').val();
        var Receive_Address = $('#Receive_Address').val();
        var Receive_Phone = $('#Receive_Phone').val();

        var errContent = [];
        var errDisplay = [];
        var invalidMess = [];

        if (UserName == null || UserName.trim() == "") {
            errDisplay = '@AdminLabel.lblUserName' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        else if (UserName.trim().length > 50) {
            invalidMess.push("@string.Format(Message.CheckMaxLength, AdminLabel.lblUserName, Constant.MAX_USER_NAME_LENGTH)");
        }

        if (Receive_District == null || Receive_District.trim() == "" || Receive_District == 0) {
            errDisplay = '@AdminLabel.lblDistrict' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }

        if (Receive_Address == null || Receive_Address.trim() == "") {
            errDisplay = '@AdminLabel.lblAddress' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        else if (Receive_Address.trim().length > 100) {
            invalidMess.push("@string.Format(Message.CheckMaxLength, AdminLabel.lblUserName, Constant.MAX_EMAIL_LENGTH)");
        }

        if (Receive_Phone == null || Receive_Phone.trim() == "" || Receive_Phone == 0) {
            errDisplay = '@UserLabel.lblPhone' + Constant.ERR_REQUIRED;
            invalidMess.push(errDisplay);
        }
        else if (Receive_Phone.trim().length > 13) {
            invalidMess.push("@string.Format(Message.CheckMaxLength, @UserLabel.lblPhone, Constant.MAX_PHONE_LENGTH)");
        }
            // check numberic
        else if (!WebDuhoc.utility.validPhone(Receive_Phone)) {
            invalidMess.push("@string.Format(@Message.IncorrectFormat, @UserLabel.lblPhone)");
        }
        return invalidMess;
    }

    $(document).off('#btnEditInfo');
    $(document).on('click', '#btnEditInfo', function () {
        if (!WebDuhoc.utility.getDataByAjax(checkTimeoutUrl, null)) return;

        $('.validation-summary-errors').remove();
        var invalidMess = validateData();
        if (invalidMess.length > 0) {
            WebDuhoc.utility.showClientError(invalidMess);
            return false;
        }
        WebDuhoc.utility.showConfirmModal('@string.Format(Message.msgConfirmUpdateInfo)', function (action) {
            if (action) {
                var formData = new FormData($('#formOrder')[0]);
                $.ajax(
                {
                    url: '@Url.Action("UpdateInfo", "UserManageOrder")',
                    data: formData,
                    mimeType: "multipart/form-data",
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        //window.parent.$('.ui-dialog-content:visible').dialog('close');
                        console.log(res);
                        var result = jQuery.parseJSON(res);
                        message = result.result == true ? "Đã chỉnh sửa đơn thành công! Vui lòng kiểm tra quản lí đơn!" : "Có lỗi trong quá trình xử lý!";
                        WebDuhoc.utility.showMessageModal(message, false, function () {
                            window.location.href = '/danh-sach-don';
                        });
                    },
                    error: function (xhr) {
                        //window.parent.$('.ui-dialog-content:visible').dialog('close');
                        window.location.href = '/Common/Error/';
                    }
                });
                event.preventDefault();
            }
        });
    });

    $("#Receive_District").change(function () {
        var districtID = $('#Receive_District').val();

        if (districtID != null && districtID > 0) {

            var paramCheckExist = {
                districtID: districtID
            };

            var data = WebDuhoc.utility.getDataByAjax('@Url.Action("getDictrictByID", "ManageDistrict")', paramCheckExist);
            if (typeof (data) != 'undefined' || data != null) {
                Info = data.exist;
                if (Info != null) {
                    $("#PriceShip").val(Info.PriceShip);
                    var TongTienHang = $('#TongTienHang').val();
                    var PriceDiscountTotal = $('#PriceDiscountTotal').val();
                    var PriceTotal = parseInt(TongTienHang) + Info.PriceShip - parseInt(PriceDiscountTotal);
                    $('#PriceTotal').val(PriceTotal);

                    $(".PriceShip").text(WebDuhoc.utility.convertIntToMoney(Info.PriceShip));
                    $(".PriceTotal").text(WebDuhoc.utility.convertIntToMoney(PriceTotal));
                }
            }
        }
    });

    // Click view Status History
    $(document).off('#btnCancel');
    $(document).on('click', '#btnCancel', function () {
        var result = WebDuhoc.utility.getDataByAjax(checkTimeoutUrl, null);
        if (!result) {
            return false;
        }

        $(this).blur();

        var OrderId = $('.hdnOrderId').val();

        if (OrderId == null || OrderId < 0) {
            return;
        }

        if (OrderId > 0) {
            var urlGetSelectTime = '@Url.Action("PopupCancelOrder", "UserManageOrder")';
            var param = {
                OrderId: OrderId
            };
            WebDuhoc.utility.ShowPopup(urlGetSelectTime, param);
        }

    });
</script>
<style>
    #ViewOrderDetail .qty {
        width: 30%;
        padding: 0px;
        margin: 0px;
        text-align: center;
        float: left;
    }

    #ViewOrderDetail .title-product {
        height: 50px;
        word-break: break-word;
        overflow: hidden;
    }

    .touchspin-down, .touchspin-up {
        display: inline-block;
        height: 28px;
        padding: 3px 8px;
        margin: 0px;
        font-size: 14px;
        font-weight: normal;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        -ms-touch-action: manipulation;
        touch-action: manipulation;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-color: #ffffff;
        border-color: #cccccc;
        border-radius: 3px;
        width: 30%;
        float: left;
    }

    #ViewOrderDetail .lblCustomer {
        font-size: 14px;
        line-height: 26px;
    }

    #ViewOrderDetail .txt-box {
        width: 100%;
    }

    #ViewOrderDetail .margintop-5 {
        margin-top: 5px;
    }

    .padding-0 {
        padding: 0px;
    }

    #ViewOrderDetail .note {
        width: 100%;
        height: 100px;
    }

    .txt-nomal{
        font-weight:normal;
    }

    #ViewOrderDetail {
    margin-right: 5px;
    margin-left: 5px;
    border: 4px solid #F7950C;
}
</style>
